const path = require("path");

module.exports = {
	settings: {
		react: {
			version: "detect",
		},
		"import/resolver": {
			node: {
				extensions: [".js", ".jsx", ".ts", ".tsx"],
			},
			webpack: {},
		},
	},
	parser: "babel-eslint",
	extends: [
		"react-app",
		"eslint:recommended",
		"plugin:react/recommended",
		"prettier",
	],
	plugins: ["react-hooks", "babel", "testing-library", "jest-dom"],
	env: {
		browser: true,
		node: true,
		es6: true,
	},
	rules: {
		"no-console": ["warn", { allow: ["warn", "error", "info"] }],
		"no-prototype-builtins": "off",
		"no-unused-vars": "warn",
		"no-unused-expressions": "warn",
		"react-hooks/rules-of-hooks": "off",
		"react-hooks/exhaustive-deps": "off",
		"react/jsx-key": "warn",
		"react/no-direct-mutation-state": "off",
		"react/display-name": "off",
		"react/no-deprecated": "off",
		"react/no-typos": "off",
		"react/no-string-refs": "off",
		"react/require-render-return": "off",
		"react/react-in-jsx-scope": "off",
		"react/prop-types": "off",
		"import/default": "off",
		"import/no-named-as-default": "off",
		"no-undef": "warn",
		"no-dupe-else-if": "warn",
		eqeqeq: ["warn", "smart"],
		"no-empty-function": "warn",
		"no-lonely-if": "warn",
		"no-lone-blocks": "warn",
		"require-await": "error", // Error because it can cause unseen errors not awaiting async code
		"no-else-return": "warn",
		"no-unneeded-ternary": "warn",
		"no-var": "error", // Should never be used, better to show this while typing the code
		"prefer-const": "warn",
		"default-case": "warn",
		"default-case-last": "warn",
		"no-alert": "warn",
		"arrow-spacing": "warn",
		"no-use-before-define": "warn",
		"no-empty": "warn",
	},
	globals: {
		test: true,
		expect: true,
		afterEach: true,
		FB: true,
		describe: true,
		it: true,
		gapi: true,
		cy: true,
		Cypress: true,
		beforeEach: true,
		jest: true,
		spyOn: true,
		JSX: true,
	},
	overrides: [
		{
			files: [
				"./src/locale/nl.json",
				"./src/locale/en.json",
				"./src/locale/fr.json",
			],
			env: { browser: true, es6: true, node: true },
			extends: ["plugin:i18n-json/recommended"],
			rules: {
				"prettier/prettier": "off",
				"no-irregular-whitespace": "off",
				"i18n-json/identical-keys": [
					"warn",
					{
						filePath: path.resolve("./src/locale/en.json"),
					},
				],
				"i18n-json/valid-message-syntax": "off",
				"i18n-json/valid-json": "off",
				"i18n-json/sorted-keys": "off",
			},
		},
		{
			files: ["**/*.ts", "**/*.tsx"],
			env: { browser: true, es6: true, node: true },
			extends: [
				"react-app",
				"eslint:recommended",
				"plugin:react/recommended",
				"plugin:@typescript-eslint/eslint-recommended",
				"plugin:@typescript-eslint/recommended",
				"plugin:import/errors",
				"plugin:import/warnings",
				"plugin:import/typescript",
				"prettier",
			],
			plugins: ["react", "@typescript-eslint", "testing-library", "jest-dom"],
			globals: {
				Atomics: "readonly",
				SharedArrayBuffer: "readonly",
				JSX: "readonly",
			},
			parser: "@typescript-eslint/parser",
			parserOptions: {
				ecmaFeatures: { jsx: true },
				ecmaVersion: 2020,
				sourceType: "module",
				project: ["./tsconfig.json", "./packages/**/tsconfig.json"],
			},
			rules: {
				"no-console": ["warn", { allow: ["warn", "error", "info"] }],
				"no-prototype-builtins": "warn",
				"react-hooks/rules-of-hooks": "off",
				"react-hooks/exhaustive-deps": "off",
				"no-unused-expressions": "warn",
				"react/prop-types": "off",
				"@typescript-eslint/no-var-requires": 0,
				"@typescript-eslint/no-use-before-define": "warn",
				"@typescript-eslint/no-empty-function": "warn",
				"testing-library/await-async-query": "error",
				"testing-library/no-await-sync-query": "error",
				"testing-library/no-debug": "warn",
				"import/namespace": "off",
				"react/jsx-key": "warn",
				"no-undef": "warn",
				"no-dupe-else-if": "warn",
				"react/no-direct-mutation-state": "off",
				"react/display-name": "off",
				"react/no-deprecated": "off",
				"react/no-typos": "off",
				"react/no-string-refs": "off",
				"react/require-render-return": "off",
				"react/react-in-jsx-scope": "off",
				"import/default": "off",
				"import/no-named-as-default": "off",
				eqeqeq: ["warn", "smart"],
				"no-lonely-if": "warn",
				"no-lone-blocks": "warn",
				"require-await": "error", // Error because it can cause unseen errors not awaiting async code
				"no-else-return": "warn",
				"no-unneeded-ternary": "warn",
				"no-var": "error", // Should never be used, better to show this while typing the code
				"prefer-const": "warn",
				"default-case": "warn",
				"default-case-last": "warn",
				"no-alert": "warn",
				"arrow-spacing": "warn",
				"no-empty-function": "warn",
				"@typescript-eslint/no-empty-interface": [
					"warn",
					{
						allowSingleExtends: true,
					},
				],
				"no-empty": "warn",
			},
			settings: {
				react: { version: "detect" },
			},
		},
	],
};
